name: üß™ –¢–µ—Å—Ç—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞

on:
  push:
    branches: ['main', 'master', 'develop']
    tags: ['v*']
  pull_request:
    branches: ['main', 'master', 'develop']
  schedule:
    - cron: '0 0 * * 0' # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ –ø–æ–ª–Ω–æ—á—å
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.8.2'

jobs:
  test:
    name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
        include:
          - os: windows-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.11'

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Poetry
        run: |
          pip install poetry==$POETRY_VERSION

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          poetry install --with test,dev --no-interaction

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ —Å black
        run: |
          poetry run black --check src/ tests/

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Å mypy
        run: |
          poetry run mypy src/ --ignore-missing-imports

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —Å isort
        run: |
          poetry run isort --check-only src/ tests/

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å bandit
        run: |
          poetry run bandit -r src/ -x tests/

      - name: üîπ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å pytest
        run: |
          poetry run pytest --cov=src --cov-report=term --cov-report=xml -v --junitxml=test-results.xml

      - name: üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: |
            test-results.xml
            coverage.xml

      - name: üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests,${{ matrix.os }},py${{ matrix.python-version }}
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  lint:
    name: üìù –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Poetry
        run: |
          pip install poetry==$POETRY_VERSION

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          poetry install --with lint --no-interaction

      - name: üîπ –ó–∞–ø—É—Å–∫ pylint
        run: |
          poetry run pylint src/ --exit-zero

      - name: üîπ –ó–∞–ø—É—Å–∫ flake8
        run: |
          poetry run flake8 src/ --exit-zero

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å safety
        run: |
          poetry run safety check --full-report

  build:
    name: üì¶ –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Poetry
        run: |
          pip install poetry==$POETRY_VERSION

      - name: üîπ –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞
        run: |
          poetry build

      - name: üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
        uses: actions/upload-artifact@v4
        with:
          name: dist-package
          path: dist/

  quality-gate:
    name: üöÄ Quality Gate
    runs-on: ubuntu-latest
    needs: [test, lint, build]

    steps:
      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
        run: |
          echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
          echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤: ${{ needs.test.result }}"
          echo "üìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏–Ω—Ç–µ—Ä–æ–≤: ${{ needs.lint.result }}"
          echo "üì¶ –°–±–æ—Ä–∫–∞: ${{ needs.build.result }}"

      - name: üîπ –°–æ–∑–¥–∞–Ω–∏–µ badge —Å—Ç–∞—Ç—É—Å–∞
        if: success()
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: your-gist-id-here # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Gist ID
          filename: workflow-status.json
          label: Tests
          message: PASSING
          color: brightgreen

      - name: üîπ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Slack (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#ci-cd'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  deploy-docs:
    name: üìö –î–µ–ø–ª–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    runs-on: ubuntu-latest
    needs: quality-gate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Poetry
        run: |
          pip install poetry==$POETRY_VERSION

      - name: üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        run: |
          poetry install --with docs
          poetry run pdoc src/monitel_framework -o docs/ --html

      - name: üîπ –î–µ–ø–ª–æ–π –Ω–∞ GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ workflow –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
  test-ui:
    name: üñ•Ô∏è UI –¢–µ—Å—Ç—ã (—Ç–æ–ª—å–∫–æ Windows)
    runs-on: windows-latest
    needs: test

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è UI —Ç–µ—Å—Ç–æ–≤
        run: |
          pip install pytest pytest-qt pyqt6

      - name: üîπ –ó–∞–ø—É—Å–∫ UI —Ç–µ—Å—Ç–æ–≤
        run: |
          python -m pytest tests/test_ui_base.py -v --tb=short

      - name: üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏
        run: |
          python -c "import gc; gc.set_debug(gc.DEBUG_LEAK); print('Memory leak check enabled')"

  performance:
    name: ‚ö° Performance —Ç–µ—Å—Ç—ã
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: üîπ Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: üîπ –ó–∞–ø—É—Å–∫ performance —Ç–µ—Å—Ç–æ–≤
        run: |
          pip install pytest-benchmark
          python -m pytest tests/performance/ -v --benchmark-only

      - name: üîπ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        run: |
          echo "Performance metrics collected"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write
